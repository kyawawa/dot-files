[color]
    ui = auto
[user]
    name =
    email =
[core]
    excludesfile = ~/.gitignore
    autocrlf = false
    quotepath = false
    pager = ""
[pager]
    log = less
    diff = less
[http]
    sslVerify = false
[credential]
    helper = cache
[alias]
    co = checkout
    ci = commit
    st = status --short --branch
    br = branch
    hist = log --pretty=format:\"%h %C(red reverse)%ad%Creset %C(green reverse)%an%Creset \t| %s%d\" --graph --date=short --name-status
    # Show local branches sorted by date
    br-date = "!f () { (for i in `git branch | colrm 1 2`; do echo `git log --date=iso8601 -n 1 --pretty=\"format:[%ai] %h\" $i` $i ; done) | sort -r; };f"
    # Show all branches (including remote) sorted by date
    br-date-all = "!f () { (for i in `git branch -a | colrm 1 2`; do echo `git log --date=iso8601 -n 1 --pretty=\"format:[%ai] %h\" $i` $i ; done) | sort -r; };f"
    # Remove all deleted items
    rm-all = "!f () { git rm `git ls-files --deleted`; };f"
    # Remove Sumbodules
    smrm  = "!f () {\
             if [ $# -ne 1 ];then \
                echo \"Usage: git smrm path/to/submodule\";\
                exit;\
             fi;\
             sm=${1%/};\
             echo git config --remove-section submodule.${sm};\
             git config --remove-section submodule.${sm};\
             echo git config --file .gitmodules --remove-section submodule.${sm};\
             git config --file .gitmodules --remove-section submodule.${sm};\
             echo git rm --cached ${sm};\
             git rm --cached ${sm};\
             gitdir=./;\
             gitfile=.git;\
             while : ;do \
                 if [ -f $gitfile ];then \
                     gitfile=${gitdir}/$(awk '/gitdir/ {print $2}' ${gitfile});\
                 else \
                     gitdir=${gitfile};\
                 break;\
                 fi;\
             done;\
             if [ -n \"${gitdir}\" ];then \
                 echo rm -rf ${gitdir}/modules/${sm};\
                 rm -rf ${gitdir}/modules/${sm};\
             fi;\
                 echo rm -rf ${sm};\
             rm -rf ${sm};\
        };f"

    # port = "!f () {\
    #             date=`date \"+%Y%m%d-%H%M%S\"`;\
    #             branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p');\
    #             echo $branch;\
    #             host=`hostname -s`;\
    #             git checkout -b \"wip-${date}\";\
    #             git add -A;\
    #             git commit -m \"[WIP] temporary commit from ${branch} on ${host}\";\
    #         };f"
